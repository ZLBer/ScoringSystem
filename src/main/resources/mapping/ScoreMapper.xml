<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test.mapper.ScoreMapper">
  <resultMap id="BaseResultMap" type="test.domain.Score">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="serial_number" jdbcType="INTEGER" property="serialNumber" />
    <result column="dominant_score" jdbcType="INTEGER" property="dominantScore" />
    <result column="secondary_score" jdbcType="INTEGER" property="secondaryScore" />
    <result column="sightsinging_score" jdbcType="INTEGER" property="sightsingingScore" />
    <result column="reviewer" jdbcType="VARCHAR" property="reviewer" />
    <result column="score_time" jdbcType="TIMESTAMP" property="scoreTime" />
    <result column="place" jdbcType="INTEGER" property="place" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, serial_number, dominant_score, secondary_score, sightsinging_score, reviewer, 
    score_time, place
  </sql>
  <select id="selectByExample" parameterType="test.domain.ScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from score
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from score
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="test.domain.ScoreExample">
    delete from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="test.domain.Score">
    insert into score (id, serial_number, dominant_score, 
      secondary_score, sightsinging_score, reviewer, 
      score_time, place)
    values (#{id,jdbcType=INTEGER}, #{serialNumber,jdbcType=INTEGER}, #{dominantScore,jdbcType=INTEGER}, 
      #{secondaryScore,jdbcType=INTEGER}, #{sightsingingScore,jdbcType=INTEGER}, #{reviewer,jdbcType=VARCHAR}, 
      #{scoreTime,jdbcType=TIMESTAMP}, #{place,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="test.domain.Score">
    insert into score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="serialNumber != null">
        serial_number,
      </if>
      <if test="dominantScore != null">
        dominant_score,
      </if>
      <if test="secondaryScore != null">
        secondary_score,
      </if>
      <if test="sightsingingScore != null">
        sightsinging_score,
      </if>
      <if test="reviewer != null">
        reviewer,
      </if>
      <if test="scoreTime != null">
        score_time,
      </if>
      <if test="place != null">
        place,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="serialNumber != null">
        #{serialNumber,jdbcType=INTEGER},
      </if>
      <if test="dominantScore != null">
        #{dominantScore,jdbcType=INTEGER},
      </if>
      <if test="secondaryScore != null">
        #{secondaryScore,jdbcType=INTEGER},
      </if>
      <if test="sightsingingScore != null">
        #{sightsingingScore,jdbcType=INTEGER},
      </if>
      <if test="reviewer != null">
        #{reviewer,jdbcType=VARCHAR},
      </if>
      <if test="scoreTime != null">
        #{scoreTime,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null">
        #{place,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="test.domain.ScoreExample" resultType="java.lang.Long">
    select count(*) from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update score
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.serialNumber != null">
        serial_number = #{record.serialNumber,jdbcType=INTEGER},
      </if>
      <if test="record.dominantScore != null">
        dominant_score = #{record.dominantScore,jdbcType=INTEGER},
      </if>
      <if test="record.secondaryScore != null">
        secondary_score = #{record.secondaryScore,jdbcType=INTEGER},
      </if>
      <if test="record.sightsingingScore != null">
        sightsinging_score = #{record.sightsingingScore,jdbcType=INTEGER},
      </if>
      <if test="record.reviewer != null">
        reviewer = #{record.reviewer,jdbcType=VARCHAR},
      </if>
      <if test="record.scoreTime != null">
        score_time = #{record.scoreTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.place != null">
        place = #{record.place,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update score
    set id = #{record.id,jdbcType=INTEGER},
      serial_number = #{record.serialNumber,jdbcType=INTEGER},
      dominant_score = #{record.dominantScore,jdbcType=INTEGER},
      secondary_score = #{record.secondaryScore,jdbcType=INTEGER},
      sightsinging_score = #{record.sightsingingScore,jdbcType=INTEGER},
      reviewer = #{record.reviewer,jdbcType=VARCHAR},
      score_time = #{record.scoreTime,jdbcType=TIMESTAMP},
      place = #{record.place,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="test.domain.Score">
    update score
    <set>
      <if test="serialNumber != null">
        serial_number = #{serialNumber,jdbcType=INTEGER},
      </if>
      <if test="dominantScore != null">
        dominant_score = #{dominantScore,jdbcType=INTEGER},
      </if>
      <if test="secondaryScore != null">
        secondary_score = #{secondaryScore,jdbcType=INTEGER},
      </if>
      <if test="sightsingingScore != null">
        sightsinging_score = #{sightsingingScore,jdbcType=INTEGER},
      </if>
      <if test="reviewer != null">
        reviewer = #{reviewer,jdbcType=VARCHAR},
      </if>
      <if test="scoreTime != null">
        score_time = #{scoreTime,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null">
        place = #{place,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="test.domain.Score">
    update score
    set serial_number = #{serialNumber,jdbcType=INTEGER},
      dominant_score = #{dominantScore,jdbcType=INTEGER},
      secondary_score = #{secondaryScore,jdbcType=INTEGER},
      sightsinging_score = #{sightsingingScore,jdbcType=INTEGER},
      reviewer = #{reviewer,jdbcType=VARCHAR},
      score_time = #{scoreTime,jdbcType=TIMESTAMP},
      place = #{place,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- -->
  <select id="countExamNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select
    count(*)
    from score
    where place = #{place,jdbcType=INTEGER}
  </select>
  <resultMap id="ScoreInfoResult" type="test.domain.ScoreInfo">
    <id column="exam_number" jdbcType="CHAR" property="examNumber" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="dominant_score" jdbcType="INTEGER" property="dominantScore" />
    <result column="secondary_score" jdbcType="INTEGER" property="secondaryScore" />
    <result column="sightsinging_score" jdbcType="INTEGER" property="sightsingingScore" />
  </resultMap>
  <select id="getScoreInfo" resultMap="ScoreInfoResult">
    select name,a.exam_number,dominant_score,secondary_score,sightsinging_score
    from scoringsystem.information AS a RIGHT JOIN scoringsystem.score AS b ON a.exam_number=b.exam_number
  </select>

</mapper>